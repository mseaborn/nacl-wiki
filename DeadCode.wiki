#summary Dead code in the codebase

The following is dead code, i.e. not reachable from public interfaces or covered by tests:

 * trusted/sandbox - ptrace()-based sandbox for Linux
    * This is not used and it seems unlikely that we'd use it, given that Chromium is switching to use the seccomp sandbox from the SUID sandbox.  ptrace() is slow, complicated and not designed for security.

 * trusted/service_runtime/fs - Some sort of filesystem.  Not used.

 * `nacl_cur_thread_key`, `GetCurThread`, `GetCurProc` in trusted/service_runtime/nacl_globals.c
    * These might be used in the future for supporting x86-64 on Mac OS X.

 * `NaClTsd*()` in shared/platform/linux/nacl_threads.c
    * Ditto.  Might be used for x86-64 on Mac.

 * `NaClAppDtor()` in sel_ldr.c, and the various functions it calls.
    * This is not completely dead, but it is rarely called.  sel_ldr normally just does exit() to shut down the process.  I think `NaClAppDtor()` is only called if sel_ldr gets an error during startup.

 * The field `holding_sr_locks` in `struct NaClAppThread`, and anything that sets it.  (Nothing reads it.)
    * The comments in nacl_app_thread.h say this is intended as a way to kill another thread.  It mentions using `pthread_kill()`, but this does not work for killing threads on Linux.